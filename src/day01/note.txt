第三题难点提示:
判断规则是正数位置上的字符与倒数位置上的字符都一致即时回文。
例如第一个字符与倒数第一个一样，第二个字符与倒数第二个字符一样。
可以使用charAt方法进行判定。

或者使用StringBuilder，这样更容易，翻转一下字符串，然后与原字符串比较。

==========================================================================

第五题难点提示:
生成验证码，可以根据char的加法实现。
例如:'a'+1 结果就是'b'.所以'a'加上26以内的随机整数就可以生成小写字母了，
同理大写也是一样的。


代码提示(不建议查看，应当尽量自行思考):

public String createCode(){
	String code = "";
	Random random = new Random();
	for(int i=0;i<5;i++){
		code+=random.nextInt(2)==0?(char)('A'+random.nextInt(26)):(char)('a'+random.nextInt(26));
	}
	return code;
}

=========================================================================

第六题难点提示:
应当先查看用户输入的是什么运算符并找到它的位置，然后截取该计算符两边的数字字符串
并转换为实际数字(通常使用字符编码计算:字符'1'保存的数字是49.那么通过减去48就可以
得到数字1。位数需要自行处理。)


代码提示:
public int parseInt(String str){
	//最后要生成的数字
	int num = 0;
	//临时变量，用于计算对应位数的数字
	int flag = 0;
	for(int i=0;i<str.length();i++){
		flag = (str.charAt(i)-48);
		/*
		 * 这里是将对应的数字计算为对应的位，例如百位数字就要用该数字乘以10的2次方
		 * 得到
		 * 可以用Math的相关方法处理(自行查看API文档)
		 */
		for(int n=0;n<str.length()-1-i;n++){
			flag*=10;
		}
		num+=flag;
	}
	return num;
}
